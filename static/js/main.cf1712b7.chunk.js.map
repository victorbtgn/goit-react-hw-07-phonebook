{"version":3,"sources":["redux/contacts-action.js","redux/contacts-reducer.js","redux/store.js","Common/Container.js","redux/contacts-operations.js","redux/contacts-selectors.js","Components/ContactForm/ContactForm.js","Components/Filter/Filter.js","Components/Contacts/ContactItem.js","Components/Contacts/ContactList.js","Common/Section.js","App.js","index.js"],"names":["fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactsRequest","addContactsSuccess","addContactsError","deleteContactsRequest","deleteContactsSuccess","deleteContactsError","changeFilter","items","createReducer","_","payload","state","filter","id","loading","error","combineReducers","store","configureStore","reducer","contacts","contactsReducer","devTools","process","Container","children","className","axios","defaults","baseURL","dispatch","get","then","data","catch","message","name","number","contact","post","contactId","delete","getAllContacts","getFilter","getContactsLength","length","getError","getLoading","getVisibleContacts","createSelector","normalizeFilter","toLowerCase","includes","connect","contactSelectors","onSubmit","contactsOperations","initialValues","validate","values","errors","find","item","setSubmitting","resetForm","isSubmitting","type","component","disabled","contactsLength","onChange","e","target","value","ContactItem","onDelete","onClick","ContactList","this","props","fetchContacts","isLoading","color","width","map","key","Component","Section","title","defaultProps","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf1712b7.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction('contacts/fetchContactsRequest');\nexport const fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactsRequest = createAction('contacts/addContactRequest');\nexport const addContactsSuccess = createAction('contacts/addContactSuccess');\nexport const addContactsError = createAction('contacts/addContactError');\n\nexport const deleteContactsRequest = createAction('contacts/deleteContactRequest');\nexport const deleteContactsSuccess = createAction('contacts/deleteContactSuccess');\nexport const deleteContactsError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactsRequest,\n  addContactsSuccess,\n  addContactsError,\n  deleteContactsRequest,\n  deleteContactsSuccess,\n  deleteContactsError,\n  changeFilter,\n} from './contacts-action';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactsSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactsSuccess]: (state, { payload }) => state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactsRequest]: () => true,\n  [addContactsSuccess]: () => false,\n  [addContactsError]: () => false,\n  [deleteContactsRequest]: () => true,\n  [deleteContactsSuccess]: () => false,\n  [deleteContactsError]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContactsError]: (_, { payload }) => payload,\n  [addContactsError]: (_, { payload }) => payload,\n  [deleteContactsError]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport contactsReducer from './contacts-reducer';\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import React from 'react';\r\nimport './Container.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className=\"container\">\r\n    <div className=\"phonebook\">{children}</div>\r\n  </div>\r\n);\r\n\r\nexport default Container;\r\n","import axios from 'axios';\nimport {\n  addContactsRequest,\n  addContactsSuccess,\n  addContactsError,\n  deleteContactsRequest,\n  deleteContactsSuccess,\n  deleteContactsError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n} from './contacts-action';\n\naxios.defaults.baseURL = 'http://localhost:4000';\n\nconst fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest);\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch(error => dispatch(fetchContactsError(error.message)));\n};\n\nconst addContact = (name, number) => dispatch => {\n  const contact = { name, number };\n\n  dispatch(addContactsRequest());\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactsSuccess(data)))\n    .catch(error => dispatch(addContactsError(error)));\n};\n\nconst deleteContact = contactId => dispatch => {\n  dispatch(deleteContactsRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactsSuccess(contactId)))\n    .catch(error => dispatch(deleteContactsError(error)));\n};\n\nexport default { fetchContacts, addContact, deleteContact };\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getAllContacts = state => state.contacts.items;\nconst getContactsLength = state => state.contacts.items.length;\nconst getFilter = state => state.contacts.filter;\nconst getError = state => state.contacts.error;\nconst getLoading = state => state.contacts.loading;\n\nconst getVisibleContacts = createSelector([getAllContacts, getFilter], (contacts, filter) => {\n  const normalizeFilter = filter.toLowerCase();\n\n  return contacts.filter(contact => contact.name.toLowerCase().includes(normalizeFilter));\n});\n\nexport default {\n  getAllContacts,\n  getFilter,\n  getContactsLength,\n  getError,\n  getLoading,\n  getVisibleContacts,\n};\n","import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { connect } from 'react-redux';\nimport contactsOperations from '../../redux/contacts-operations';\nimport contactSelectors from '../../redux/contacts-selectors';\n\nconst ContactForm = ({ items, onSubmit }) => (\n  <>\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      validate={values => {\n        const errors = {};\n        const isExist = items.find(item => item.name === values.name);\n\n        if (isExist) {\n          errors.name = `${values.name} is already in contacts.`;\n        } else if (!values.name) {\n          errors.name = 'Required';\n        } else if (!values.number) {\n          errors.number = 'Required';\n        } else if (values.number.length !== 7) {\n          errors.number = 'Please fill the correct number: 12-34-567';\n        }\n\n        return errors;\n      }}\n      onSubmit={(values, { setSubmitting, resetForm }) => {\n        onSubmit(values);\n        setSubmitting(false);\n        resetForm();\n      }}\n    >\n      {({ isSubmitting }) => (\n        <Form>\n          <div className=\"input-form\">\n            <Field type=\"text\" name=\"name\" className=\"input\" />\n            <ErrorMessage name=\"name\" component=\"div\" className=\"input-error\" />\n          </div>\n          <div className=\"input-form\">\n            <Field type=\"tel\" name=\"number\" className=\"input\" />\n            <ErrorMessage name=\"number\" component=\"div\" className=\"input-error\" />\n          </div>\n          <button type=\"submit\" disabled={isSubmitting} className=\"btn\">\n            Add contact\n          </button>\n        </Form>\n      )}\n    </Formik>\n  </>\n);\n\nconst mapStateToProps = state => ({\n  items: contactSelectors.getAllContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: contact => dispatch(contactsOperations.addContact(contact.name, contact.number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { changeFilter } from '../../redux/contacts-action';\nimport contactSelectors from '../../redux/contacts-selectors';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ filter, contactsLength, onChange }) => (\n  <>\n    {contactsLength > 1 && (\n      <label>\n        Find contacts by name\n        <br />\n        <input type=\"text\" name=\"filter\" value={filter} className=\"input\" onChange={onChange} />\n      </label>\n    )}\n  </>\n);\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  contactsLength: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  filter: contactSelectors.getFilter(state),\n  contactsLength: contactSelectors.getContactsLength(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ContactItem = ({ id, name, number, onDelete }) => (\n  <li className=\"list-item\">\n    <div className=\"list-item-data\">\n      <span>{name}:</span>\n      <span>\n        {number[0]}\n        {number[1]}-{number[2]}\n        {number[3]}-{number[4]}\n        {number[5]}\n        {number[6]}\n      </span>\n    </div>\n    <button className=\"btnContact\" type=\"button\" onClick={() => onDelete(id)}>\n      &#215;\n    </button>\n  </li>\n);\n\nContactItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import React, { Component } from 'react';\nimport ContactItem from './ContactItem';\nimport { connect } from 'react-redux';\nimport contactsOperations from '../../redux/contacts-operations';\nimport contactSelectors from '../../redux/contacts-selectors';\nimport PropTypes from 'prop-types';\n\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nclass ContactList extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    return (\n      <>\n        {this.props.isLoading && <Loader type=\"ThreeDots\" color=\"#4f5252\" width={100} className=\"loader\" />}\n        <ul className=\"list\">\n          {this.props.contacts.map(({ id, name, number }) => (\n            <ContactItem key={id} id={id} name={name} number={number} onDelete={() => this.props.onDelete(id)} />\n          ))}\n        </ul>\n\n        {this.props.error && (\n          <>\n            <p className=\"errorMessage\">{this.props.error}</p>\n            <p className=\"errorMessage\">The server is temporarily unavailable, try again later.</p>\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  contacts: contactSelectors.getVisibleContacts(state),\n  error: contactSelectors.getError(state),\n  isLoading: contactSelectors.getLoading(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\n  onDelete: id => dispatch(contactsOperations.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => (\n  <>\n    {title && <h2 className=\"title\">{title}</h2>}\n\n    <section className=\"section\">{children}</section>\n  </>\n);\n\nSection.defaultProps = {\n  title: '',\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Section;\n","import React from 'react';\r\nimport Container from './Common/Container';\r\nimport ContactForm from './Components/ContactForm/ContactForm';\r\nimport Filter from './Components/Filter/Filter';\r\nimport ContactList from './Components/Contacts/ContactList';\r\nimport Section from './Common/Section';\r\nimport 'toasted-notes/src/styles.css';\r\nimport './App.css';\r\n\r\nconst App = () => (\r\n  <Container>\r\n    <Section title=\"Phonebook\">\r\n      <ContactForm />\r\n    </Section>\r\n\r\n    <Section title=\"Contacts\">\r\n      <Filter />\r\n\r\n      <ContactList />\r\n    </Section>\r\n  </Container>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport './index.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}